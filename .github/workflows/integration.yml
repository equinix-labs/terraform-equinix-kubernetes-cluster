name: "integration"
# This workflow intends to verify that the module provisions
# successfully for all software and infrastructure defined.
# https://learn.hashicorp.com/tutorials/terraform/automate-terraform

on:
  push:
    paths-ignore:
      - "LICENSE"
      - "**.md"

jobs:
  integrate:
    name: Integration Tests
    runs-on: ${{ matrix.os }}
    env:
      TF_VAR_metro: "da"
      TF_IN_AUTOMATION: 1
      TF_VERSION: ${{ matrix.tf }}
      TF_VAR_control_plane_node_count: 0
      TF_VAR_count_x86: 1
      TF_VAR_count_arm: 0
      TF_VAR_auth_token: ${{ secrets.METAL_AUTH_TOKEN }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        tf: [1.5]
    defaults:
      run:
        working-directory: ./examples/cpem-add-on
    steps:
      - name: Checkout from Github
        uses: actions/checkout@v4
      - name: Add SHORT_SHA env property with commit short sha
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
      - name: Initialize Terraform, Modules, and Plugins
        id: init
        run: terraform init -input=false
      - id: project
        uses: equinix-labs/metal-project-action@v0.13.0
        with:
          userToken: ${{ secrets.METAL_AUTH_TOKEN }}
      - name: Terraform Vars - Cluster Name
        run: echo "TF_VAR_cluster_name=tfacc-${SHORT_SHA}" >> $GITHUB_ENV
      - name: Terraform Vars - Project ID
        run: echo "TF_VAR_project_id=${{ steps.project.outputs.projectID }}" >> $GITHUB_ENV
      - name: Terraform Plan
        id: plan
        timeout-minutes: 45
        run: terraform plan -out=tfplan -input=false
      - name: Terraform Apply
        id: apply
        timeout-minutes: 45
        run: terraform apply -input=false tfplan
      - name: Terraform Destroy
        id: destroy
        if: ${{ always() }}
        run: terraform destroy -input=false -auto-approve
      - name: Project Delete
        if: ${{ always() }}
        uses: equinix-labs/metal-sweeper-action@v0.6.0
        env:
          METAL_PROJECT_ID: ${{ steps.project.outputs.projectID }}
          METAL_AUTH_TOKEN: ${{ secrets.METAL_AUTH_TOKEN }}
